import os
import logging
from nicegui import ui

#logger config
# Create and configure logger
logging.basicConfig(filename="weblog.log",
                    format='%(asctime)s %(message)s',
                    filemode='w')

# Creating an object
logger = logging.getLogger()
#logger.setLevel(logging.INFO)


#Test variables
file_path='/home/yaelrdf/Documents/Dispositivos-programables-UPIICSA/Practicas_EXTRAS/C-Test/CTest.X/dist/default/production/CTest.X.production.hex'

#Globals
output=""
programer_bussy=False

#Programer funtion
def programer(hex_path):
    #Coamndo
    #comand='cat '+hex_path
    comand='echo Programing Succed'
    ##Programar
    logging.info('Programing started')
    output=os.popen(comand).read()
    logging.info('Programing done')
    
    #Output handeling
    ret_str={"output": output, "state": 0}
    #Programing succed
    if output.find("Succed")!=-1:
        ret_str['state']='Success'
        logging.info('Programing success')
        
    
    elif output.find("Failed")!=-1:
        ret_str['state']="Failed"
        logging.error('Programing falied')
        
    elif output.find("No PICKIT 2")!=-1:
        ret_str['state']="No_Programer"
        logging.error('No programer detected')
    
    else:
        ret_str['state']="General_Error"
    #Final return
    return ret_str

#UI and File

def webinterface():
    def handle_upload(e):
        global uploaded_file_path
        # Create uploads directory if it doesn't exist
        os.makedirs('./uploads', exist_ok=True)
        # Get the uploaded file
        file = e.files[0]
        # Define save path
        save_path = f'./uploads/{file.name}'
        # Save the file
        with open(save_path, 'wb') as f:
            f.write(file.content.read())
        # Store the path
        uploaded_file_path = save_path
    
    #Uploag UI
    ui.upload(
        on_upload=handle_upload,
        max_file_size=10_000_000,  # 10MB
        multiple=False,
        auto_upload=True
    ).props('accept=.hex').classes('max-w-full')
    
    ui.run()
webinterface()